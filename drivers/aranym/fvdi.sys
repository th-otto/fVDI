# fVDI configuration

debugout -1

echo "q - Quit fVDI"
echo "b - Bitmap fonts only"
echo "d - Debug"
setkey n
#waitkey 2

exitkey q

# ----- Standard setup -----

antialias
filecache 1024
preallocate 1024

casekey b no_fsm_fonts
cookie nvdi=$0501
cookie speedo
vqgdos _FSM
:no_fsm_fonts

# This is the path to fonts and drivers.
PATH = C:\GEMSYS

# Uncomment and modify this if you want to load another palette at
# startup time. The file must be 1536 bytes and contain 3 (RGB) * 256
# VDI palette values (0 - 1000). (This is a common palette file
# format.)
#palette c:\nvdi5.pal

# Tell fVDI the size of your screen, in mm. Recommended!
# A negative number can be given to specify a fixed DPI.
# Defaults to the approximate size of the picture on an SM124.
width -95
height -95

# If fVDI is not being started from the AUTO folder, comment this out.
booted


# ----- Various fixes -----

# With this uncommented fVDI can use NVDI as a background VDI (for
# dealing with non-screen devices). Some strange problems still
# remain, though.
#nvdifix

# Some programs look in the lineA variables for certain information.
# Uncomment this to make fVDI do a few more changes there.
#lineafix

# With this uncommented fVDI will make the XBIOS report the correct
# screen address even if using a graphics card. There are still
# problems with this.
#xbiosfix


# ----- Advanced setup -----

# Specify the 'roundness' of circles/ellipses/arcs.
# The split number indicates how many lines will be drawn as a
# percentage of the largest ellipse radius. The min/max numbers
# make sure that not too few or too many lines are used.
# More lines will result in slower drawing.
# Defaults are as in the original VDI (the GPLed sources).
#arcsplit 25
#arcmin 8
#arcmax 256

# Uncomment this to force fVDI to make do with a single Trap #2
# bending. Normally fVDI tries to move itself forward in the vector
# chains, but this might cause trouble together with some other TSR.
#singlebend

# Unless this is uncommented, fVDI tries to allocate memory as itself
# rather than the calling application under normal TOS.
# This option might possibly be useful if fVDI is launched before
# MiNT.
#nopidalloc

# If this is uncommented, fVDI will refrain from keeping a list of all
# allocated memory blocks. This option is useful if fVDI is launched
# before MiNT running with memory protection.
#nomemlink

# Uncomment this to disable all the VDI vector functions (vex_).
#novex

# Uncomment this to force fVDI to not rely on a previous VDI.
# For now, this will mean no mouse support...
#standalone

# The number of internal memory blocks allocated.
# Defaults to two, and there should normally be no reason to change
# that setting.
#blocks 2

# The size of the internal memory blocks in kbyte.
# Defaults to ten, which should normally be enough.
#blocksize 20


# ----- Debug setup -----

# This will turn on a few debug features in fVDI if uncommented.
# If something bombs, the information given at startup (this is before
# fVDI is running, so it will be on the normal Atari screen) using
# this, together with what for example ERR_RPRT.PRG shows, is very
# useful.
# Multiple 'debug' turns on more debug output/features.
casekey d debugging
goto no_debugging
:debugging
debug debug debug
:no_debugging
# vrt_cpyfm
silent 121
# vs_clip vr_trn_fm vswr_mode
silent 129 32 110
# lines
silent 6 15 16 17 108
# fills
silent 23 24 25 104 114

# This enables interactive debugging if uncommented.
# fVDI will stop and wait for key presses after displaying debug
# output. See the development documentation for more information.
#interactive

# Uncomment this one if you want the debug output to go somewhere else
# than the screen. The number is a BIOS (Bconout) device, where the
# most useful ones are the parallel port (0), the serial port (1), and
# the midi port (3). Use -1 for ARAnyM console output and -2 to return
# to the default (screen output via Cconws).
#debugout -1

# The size of the VDI call log in kbyte.
# Defaults to 4, but is neither allocated nor used without 'debug'.
#logsize 100


# ----- Interactive setup -----

# Uncomment and change to set up a default key (reported if none is
# pressed). A device driver (or exitkey/casekey) can ask for this
# value later on.
#setkey f

# Uncomment and change to write any text to the screen.
# Note the quotes!
#echo "Select graphics mode (or 'q' to skip fVDI):"

# Uncomment and change to wait for a key (for a specified number of
# seconds). A device driver (or exitkey/casekey) can ask for this
# value later on.
#waitkey 3

# Uncomment and change to specify a key for quitting fVDI immediately.
#exitkey q

# Uncomment to exchange the last key pressed with a stored one.
#swapkey

# Depending on the stored key, a jump to a later place in the file can
# be done. The place must be marked by the same text as the second
# parameter below, followed by a ':'.
#casekey m monochrome


casekey b no_vector_fonts
FONTS = C:\gemsys\ttf\
:no_vector_fonts

size 6 8 9 10 11 12 14 16 18 24 36 40 44 48 64 72

# ----- Driver configuration -----

# Common driver initialization options (any driver can add to these):
# accelerate xxxxxxx
#     Any soft- or hardware accelerations can be turned off using the
#     'accelerate xxxxxxx' option. For any 'x' that is replaced by a
#     '-' or a '0', the corresponding accelerated function will be
#     turned off.
#     If this option is not used, all acceleration will be on.
#     Acceleration possibilities (in order):
#        line expand fillpoly fill blit text mouse

# The standard software accelerated drivers all recognize
# shadow
#     Use a separate buffer of the screen in RAM. This is not useful
#     unless you have a really fast processor ('040) and RAM that can
#     be accessed much faster than the screen.

# The ARAnyM driver recognizes
# mode WIDTHxHEIGHTxDEPTH@FREQUENCY
#     Sets a mode as close to (but not higher) the given numbers as
#     possible.
# realones
#     Do not special case all zero/one blit types in true colour mode.
#     Often better left inactive.
# assumenf
#     Use NatFeat without checking for cookie.
# scrninfo fb
#     Make vq_scrninfo return values regarding actual fb layout.
# debug
#     Turn on debugging aids.

# The Eclipse/RageII driver recognizes
# mode n    ('n' can be replaced by 'key' (see above))
#     Sets default mode n. 0 is always 640x480x8@60.
# mode WIDTHxHEIGHTxDEPTH@FREQUENCY
#     Sets a mode as close to (but not higher) the given numbers as
#     possible.
# doblit
#     Causes screen->RAM blits to be done.
#     Without 'pcibios' this is currently _very_ slow.
#     Now only necessary when running without 'pcibios'.
# pcibios
#     Set things up to work under an Eclipse PCI BIOS.
#     You should normally use this.
# oldinit
#     Will force the initialization to be done as if 'pcibios' was not
#     active.
#     Could help if there are initialization problems.
# imgcache
#     Tell fVDI to cache images (currently only icon (32x32) sized).
# screencache
#     Lets fVDI assume that the applications will only use data
#     blitted from the screen for direct repaint (a single one).
#     Will cause problems with some applications, but is very fast.
# onlysrc
#     Force all blits to D=S mode with the 32 bit driver.
#     The standard Falcon desktop can not display icons without this. 
# realones
#     Do not special case all zero/one blit types in true colour mode.
#     Often better left inactive.
# bright
#     Makes the display somewhat brighter.
# 4mb
#     Tell fVDI to treat the card as a 4Mbyte one.
#     Only necessary when running without 'pcibios'.
# nosetmouse
#     Do not set the mouse position on return from drawing routines.
# nopalette
#     Force the DAC to bypass the hardware palette.
#     Should never be necessary.
# screen n
#     In case the internal old screen check is fooled somehow.
#     This is not needed if the fVDI ACC is installed.
# aesbuf n
#     Let fVDI know about the AES's background buffer.
#     This is not needed if the fVDI ACC is installed.
# debug
#     Turn on debugging aids.
# scrninfo fb
#     Force vq_scrninfo to return information regarding the actual
#     frame buffer layout rather than that used for VDI blits.
# notoram
#     Skip any blits from screen to ram.
# clrbltidx
#     Resets the count of cached areas.
# experiment
#     Test a few things.


# fVDI should be able to deal with any standard fonts.
# Just list what you want to use below the driver definition.
# You specify a system font by adding an 's' before the font
# filename. If you do not specify a system font, fVDI will use the
# default one (from the ROM).
# It is a very good idea to have a system font in the same sizes as
# the normal GEM one, but it is not necessary.

#01r aranym.sys mode 1200x1024x16@72
#01r aranym.sys mode 1024x768x16@72 assumenf
#01r aranym.sys mode 800x600x16@72 assumenf

echo "0 - 800x600x32"
echo "1 - 1024x768x32"
echo "2 - 1280x1024x32"
echo "3 - 1920x960x32"
echo "4 - 1920x960x8"
echo "5 - 1920x960x4"
echo "6 - 640x480x32"
echo "7 - 1920x960x16"
echo "8 - 640x480x8"
echo "9 - 1280x1024x16"
swapkey
setkey 1
#waitkey 1

casekey 0 res800x600x32
casekey 1 res1024x768x32
casekey 2 res1280x1024x32
casekey 3 res1920x960x32
casekey 4 res1920x960x8
casekey 5 res1920x960x4
casekey 6 res640x480x32
casekey 7 res1920x960x16
casekey 8 res640x480x8
casekey 9 res1280x1024x16

:res800x600x32
01r aranym.sys mode 800x608x32@72 irq accelerate xxxxxxx
goto font_specification

:res1024x768x32
01r aranym.sys mode 1024x768x32@72 irq accelerate xxxxxxx
goto font_specification

:res1280x1024x32
01r aranym.sys mode 1280x1024x32@72 irq accelerate xxxxxxx
goto font_specification

:res1920x960x32
01r aranym.sys mode 1792x928x32@72 irq accelerate xxxxxxx
#01r aranym.sys mode 1920x1024x32@72 irq accelerate xxxxxxx
goto font_specification

:res1920x960x8
01r aranym.sys mode 1920x960x8@72 irq accelerate xxxxxxx
goto font_specification

:res1920x960x4
01r aranym.sys mode 1920x960x4@72 irq accelerate xxxxxxx
goto font_specification

:res640x480x32
01r aranym.sys mode 640x480x32@72 irq accelerate xxxxxxx
goto font_specification

:res1920x960x16
01r aranym.sys mode 1920x960x16@72 irq accelerate xxxxxxx
goto font_specification

:res640x480x8
01r aranym.sys mode 640x480x8@72 irq accelerate xxxxxxx
goto font_specification

:res1280x1024x16
01r aranym.sys mode 1280x1024x16@72 irq accelerate xxxxxxx
goto font_specification

:font_specification
swapkey

#s MONACO08.FNT
#s MONACO09.FNT
#s MONACO10.FNT
#s MONACO20.FNT
